#!/bin/bash

# Функция для отображения пользователей и их домашних каталогов
display_users() {
  # Проверка, является ли пользователь root
  if [[ $EUID -ne 0 ]]; then
    echo "Этот скрипт требует прав root." >&2
    exit 1
  fi

  # Получение списка пользователей и сортировка по алфавиту
  users=$(cut -d: -f1 /etc/passwd | sort)

  # Отображение пользователей и их домашних каталогов
  echo "Пользователи и их домашние каталоги:"
  for user in $users; do
    # Получение домашнего каталога для пользователя
    home_dir=$(grep "^$user:" /etc/passwd | cut -d: -f6)
    echo "$user: $home_dir"
  done
}

# Функция для отображения запущенных процессов
display_processes() {
  # Получение списка запущенных процессов и сортировка по идентификатору процесса
  processes=$(ps aux | sort -k2)

  # Отображение списка запущенных процессов
  echo "Запущенные процессы:"
  echo "$processes"
}

# Функция для записи вывода в файл
log_output() {
  # Проверка, существует ли путь к файлу и доступен ли он для записи
  if [[ ! -w "$1" ]]; then
    echo "Ошибка: Невозможно записать в файл: $1" >&2
    exit 1
  fi

  # Перенаправление вывода в указанный файл
  exec > "$1" 2>&1
}

# Функция для записи ошибок в файл
log_errors() {
  # Проверка, существует ли путь к файлу и доступен ли он для записи
  if [[ ! -w "$1" ]]; then
    echo "Ошибка: Невозможно записать в файл: $1" >&2
    exit 1
  fi

  # Перенаправление ошибок в указанный файл
  exec 2>"$1"
}

# Функция для отображения справки
display_help() {
  echo "Использование: $0 [-u|--users] [-p|--processes] [-l PATH|--log PATH] [-e PATH|--errors PATH] [-h|--help]"
  echo ""
  echo "Опции:"
  echo "-u, --users       Отобразить список пользователей и их домашних каталогов (требуются права root)."
  echo "-p, --processes    Отобразить список запущенных процессов."
  echo "-l PATH, --log PATH   Записать вывод в указанный файл по пути PATH."
  echo "-e PATH, --errors PATH  Записать ошибки в указанный файл по пути PATH."
  echo "-h, --help       Отобразить эту справку."
}

# Заменяем длинные аргументы на короткие
ARGS=() # Временный массив для преобразованных аргументов
for arg in "$@"; do
  case "$arg" in
    --users) ARGS+=("-u") ;;
    --processes) ARGS+=("-p") ;;
    --log) ARGS+=("-l") ;;
    --errors) ARGS+=("-e") ;;
    --help) ARGS+=("-h") ;;
    *) ARGS+=("$arg") ;; # Остальные аргументы без изменений
  esac
done

# Подменяем оригинальные аргументы преобразованным массивом
set -- "${ARGS[@]}"

# Обработка аргументов командной строки
while getopts "upl:e:h" opt; do
  case $opt in
    u)
      display_users
      exit 0
      ;;
    p)
      display_processes
      exit 0
      ;;
    l)
      log_output "$OPTARG"
      ;;
    e)
      log_errors "$OPTARG"
      ;;
    h)
      display_help
      exit 0
      ;;
    \?)
      echo "Неверный параметр: -$OPTARG" >&2
      exit 1
      ;;
  esac
done



# Отображение справки, если не указаны аргументы
if [[ $# -eq 0 ]]; then
  echo "Используйте --help или -h для получения справки"
  exit 0
fi
